$date
   Sat May 10 11:08:04 2025
$end

$version
  2024.2.0
  $dumpfile ("wave.vcd") 
$end

$timescale
  1ps
$end

$scope module cache_tb $end
$var reg 1 ! clk $end
$var reg 1 " resetn $end
$var reg 1 # cpu_valid $end
$var reg 4 $ cpu_wstrb [3:0] $end
$var reg 32 % cpu_addr [31:0] $end
$var reg 32 & cpu_wdata [31:0] $end
$var wire 32 ' cpu_rdata [31:0] $end
$var wire 1 ( cpu_ready $end
$var wire 1 ) mem_valid $end
$var reg 1 * mem_ready $end
$var wire 4 + mem_wstrb [3:0] $end
$var wire 34 , mem_addr [33:0] $end
$var wire 32 - mem_wdata [31:0] $end
$var reg 32 . mem_rdata [31:0] $end
$var wire 32 / cache_miss_count [31:0] $end
$var wire 1 0 is_instruction $end
$var wire 1 1 tlb_flush $end
$var wire 1 2 stall $end
$var wire 1 3 write_back $end
$var wire 32 4 satp [31:0] $end
$var wire 32 5 mstatus [31:0] $end
$var wire 2 6 privilege_mode [1:0] $end
$var wire 32 7 fault_address [31:0] $end
$var wire 1 8 page_fault $end
$var integer 32 9 i [31:0] $end
$scope module u_dut $end
$var wire 1 : clk $end
$var wire 1 ; resetn $end
$var wire 1 < cpu_valid $end
$var reg 1 = cpu_ready $end
$var wire 4 > cpu_wstrb [3:0] $end
$var wire 32 ? cpu_addr [31:0] $end
$var wire 32 @ cpu_wdata [31:0] $end
$var reg 32 A cpu_rdata [31:0] $end
$var reg 1 B mem_valid $end
$var wire 1 C mem_ready $end
$var reg 4 D mem_wstrb [3:0] $end
$var reg 34 E mem_addr [33:0] $end
$var reg 32 F mem_wdata [31:0] $end
$var wire 32 G mem_rdata [31:0] $end
$var wire 32 / cache_miss_count [31:0] $end
$var wire 1 0 is_instruction $end
$var wire 1 1 tlb_flush $end
$var reg 1 H stall $end
$var wire 1 3 write_back $end
$var wire 32 4 satp [31:0] $end
$var wire 32 5 mstatus [31:0] $end
$var wire 2 6 privilege_mode [1:0] $end
$var reg 32 I fault_address [31:0] $end
$var reg 1 J page_fault $end
$var wire 6 K cache_idx [5:0] $end
$var wire 20 L cache_tag [19:0] $end
$var wire 1 M is_write $end
$var wire 1 N hit $end
$var wire 32 O hit_data [31:0] $end
$var reg 1 P cache_we $end
$var reg 32 Q cache_wdata [31:0] $end
$var reg 32 R miss_count [31:0] $end
$var reg 2 S wr_state [1:0] $end
$var reg 1 T alloc_state $end
$var reg 6 U alloc_idx [5:0] $end
$var reg 20 V alloc_tag [19:0] $end
$var reg 32 W alloc_data [31:0] $end
$scope module u_tag_ram $end
$var wire 1 : clk $end
$var wire 1 ; resetn $end
$var wire 6 X idx [5:0] $end
$var wire 20 Y tag [19:0] $end
$var wire 32 Z payload_i [31:0] $end
$var wire 1 [ we $end
$var wire 1 < valid_i $end
$var reg 1 \ hit_o $end
$var reg 32 ] payload_o [31:0] $end
$var reg 1 ^ replace_way [0:0] $end
$var integer 32 _ i [31:0] $end
$upscope $end
$upscope $end
$scope task test_write $end
$var reg 32 ` addr [31:0] $end
$var reg 32 a data [31:0] $end
$upscope $end
$scope task test_read $end
$var reg 32 b addr [31:0] $end
$var reg 32 c expected [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
0"
0#
b0 $
b0 %
b0 &
bx '
x(
0)
0*
b0 +
b0 ,
b0 -
b0 .
bx /
00
01
x2
03
b0 4
b0 5
b11 6
bx 7
x8
b10000000000 9
0:
0;
0<
x=
b0 >
b0 ?
b0 @
bx A
0B
0C
b0 D
b0 E
b0 F
b0 G
xH
bx I
xJ
b0 K
b0 L
0M
xN
bx O
0P
b0 Q
bx R
bx S
xT
bx U
bx V
bx W
bx X
bx Y
b0 Z
0[
x\
bx ]
x^
bx _
bx `
bx a
bx b
bx c
$end

#5000
1!
b0 '
0(
b0 /
1:
0=
b0 A
0N
b0 O
b0 R
b0 S
0T
b0 X
b0 Y
0\
b0 ]
0^
b10 _

#10000
0!
0:

#15000
1!
1:
b1000000 _

#20000
0!
1"
0:
1;

#25000
1!
1:

#30000
0!
0:

#35000
1!
1:

#40000
0!
0:

#45000
1!
1:

#50000
0!
1#
b1111 $
b1000000000000 %
b10001001000100011001101000100 &
b1111 +
b1000000000000 ,
b10001001000100011001101000100 -
0:
1<
b1111 >
b1000000000000 ?
b10001001000100011001101000100 @
b1111 D
b1000000000000 E
b10001001000100011001101000100 F
b1 K
b1 L
1M
b1 X
b1 Y
b10 _
b1000000000000 `
b10001001000100011001101000100 a

#55000
1!
1)
b1 /
1:
1B
b1 R
b1 S

#60000
0!
0:

#65000
1!
1*
b10 /
1:
1C
b10 R

#70000
0!
0:

#75000
1!
0)
b11 /
1:
0B
1P
b10001001000100011001101000100 Q
b11 R
b0 S
1T
b1 U
b1 V
b10001001000100011001101000100 W
b10001001000100011001101000100 Z
1[

#80000
0!
0:

#85000
1!
b10001001000100011001101000100 '
1(
0)
0*
b100 /
1:
1=
b10001001000100011001101000100 A
0B
0C
1N
b10001001000100011001101000100 O
1P
b10001001000100011001101000100 Q
b100 R
b1 S
0T
b10001001000100011001101000100 Z
1[
1\
b10001001000100011001101000100 ]
1^
b10 _

#90000
0!
0:

#95000
1!
0#
b0 $
0(
b0 +
1:
0<
0=
b0 >
b0 D
0M
0P
b0 Q
b0 Z
0[

#100000
0!
0:

#105000
1!
1:

#110000
0!
0:

#115000
1!
1#
1(
1:
1<
1=
b1000000000000 b
b10001001000100011001101000100 c

#120000
0!
0:

#125000
1!
0#
0(
1:
0<
0=

#130000
0!
0:

#135000
1!
1:

#140000
0!
0:

#145000
1!
1#
b1111 $
b10000000000000 %
b10101010101110111100110011011101 &
1(
0)
b1111 +
b10000000000000 ,
b10101010101110111100110011011101 -
1:
1<
1=
b1111 >
b10000000000000 ?
b10101010101110111100110011011101 @
0B
b1111 D
b10000000000000 E
b10101010101110111100110011011101 F
b10 K
b10 L
1M
1N
b10101010101110111100110011011101 O
1P
b10101010101110111100110011011101 Q
b10 X
b10 Y
b10101010101110111100110011011101 Z
1[
1\
b10101010101110111100110011011101 ]
0^
b10 _
b10000000000000 `
b10101010101110111100110011011101 a

#150000
0!
0:

#155000
1!
0#
b0 $
0(
b0 +
1:
0<
0=
b0 >
b0 D
0M
0P
b0 Q
b0 Z
0[

#160000
0!
0:

#165000
1!
1:

#170000
0!
0:

#175000
1!
1#
b1111 $
b11000000000000 %
b11011101110011001011101110101010 &
b10101010101110111100110011011101 '
1(
0)
b1111 +
b11000000000000 ,
b11011101110011001011101110101010 -
1:
1<
1=
b1111 >
b11000000000000 ?
b11011101110011001011101110101010 @
b10101010101110111100110011011101 A
0B
b1111 D
b11000000000000 E
b11011101110011001011101110101010 F
b11 K
b11 L
1M
1N
b11011101110011001011101110101010 O
1P
b11011101110011001011101110101010 Q
b11 X
b11 Y
b11011101110011001011101110101010 Z
1[
1\
b11011101110011001011101110101010 ]
1^
b10 _
b11000000000000 `
b11011101110011001011101110101010 a

#180000
0!
0:

#185000
1!
0#
b0 $
0(
b0 +
1:
0<
0=
b0 >
b0 D
0M
0P
b0 Q
b0 Z
0[

#190000
0!
0:

#195000
1!
1:

#200000
0!
0:

#205000
1!
1#
b1111 $
b100000000000000 %
b10010001101000101011001111000 &
b11011101110011001011101110101010 '
1(
0)
b1111 +
b100000000000000 ,
b10010001101000101011001111000 -
1:
1<
1=
b1111 >
b100000000000000 ?
b10010001101000101011001111000 @
b11011101110011001011101110101010 A
0B
b1111 D
b100000000000000 E
b10010001101000101011001111000 F
b100 K
b100 L
1M
1N
b10010001101000101011001111000 O
1P
b10010001101000101011001111000 Q
b100 X
b100 Y
b10010001101000101011001111000 Z
1[
1\
b10010001101000101011001111000 ]
0^
b10 _
b100000000000000 `
b10010001101000101011001111000 a

#210000
0!
0:

#215000
1!
0#
b0 $
0(
b0 +
1:
0<
0=
b0 >
b0 D
0M
0P
b0 Q
b0 Z
0[

#220000
0!
0:

#225000
1!
1:

#230000
0!
0:

#235000
1!
1#
b10010001101000101011001111000 '
1(
1:
1<
1=
b10010001101000101011001111000 A
b100000000000000 b
b10010001101000101011001111000 c

#240000
0!
0:

#245000
1!
0#
0(
1:
0<
0=

#250000
0!
0:

#255000
1!
1:

#260000
0!
0:

#265000
1!
1#
b1111 $
b101000000000000 %
b1010101101010100101010110101010 &
1(
0)
b1111 +
b101000000000000 ,
b1010101101010100101010110101010 -
1:
1<
1=
b1111 >
b101000000000000 ?
b1010101101010100101010110101010 @
0B
b1111 D
b101000000000000 E
b1010101101010100101010110101010 F
b101 K
b101 L
1M
1N
b1010101101010100101010110101010 O
1P
b1010101101010100101010110101010 Q
b101 X
b101 Y
b1010101101010100101010110101010 Z
1[
1\
b1010101101010100101010110101010 ]
1^
b10 _
b101000000000000 `
b1010101101010100101010110101010 a

#270000
0!
0:

#275000
1!
0#
b0 $
0(
b0 +
1:
0<
0=
b0 >
b0 D
0M
0P
b0 Q
b0 Z
0[

#280000
0!
0:

#285000
1!
1:

#290000
0!
0:

#295000
1!
1#
b1010101101010100101010110101010 '
1(
1:
1<
1=
b1010101101010100101010110101010 A
b101000000000000 b
b1010101101010100101010110101010 c

#300000
0!
0:

#305000
1!
0#
0(
1:
0<
0=

#310000
0!
0:

#315000
1!
1:

#320000
0!
0:

#325000
1!
1:

#330000
0!
0:

#335000
1!
1:

#340000
0!
0:

#345000
1!
1:

#350000
0!
0:

#355000
1!
1:

#360000
0!
0:

#365000
1!
1:
